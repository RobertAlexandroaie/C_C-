//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFClient.Proxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/EF2")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ADRESAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CUSTOMERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAMEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WCFClient.Proxy.Order> OrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ADRESA {
            get {
                return this.ADRESAField;
            }
            set {
                if ((object.ReferenceEquals(this.ADRESAField, value) != true)) {
                    this.ADRESAField = value;
                    this.RaisePropertyChanged("ADRESA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CUSTOMERID {
            get {
                return this.CUSTOMERIDField;
            }
            set {
                if ((this.CUSTOMERIDField.Equals(value) != true)) {
                    this.CUSTOMERIDField = value;
                    this.RaisePropertyChanged("CUSTOMERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAME {
            get {
                return this.NAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.NAMEField, value) != true)) {
                    this.NAMEField = value;
                    this.RaisePropertyChanged("NAME");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WCFClient.Proxy.Order> Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/EF2")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CUSTOMERIDField;
        
        //[System.Runtime.Serialization.OptionalFieldAttribute()]
        //private WCFClient.Proxy.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DATAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ORDERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WCFClient.Proxy.OrderDetails> OrderDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> VALOAREField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CUSTOMERID {
            get {
                return this.CUSTOMERIDField;
            }
            set {
                if ((this.CUSTOMERIDField.Equals(value) != true)) {
                    this.CUSTOMERIDField = value;
                    this.RaisePropertyChanged("CUSTOMERID");
                }
            }
        }
        
        //[System.Runtime.Serialization.DataMemberAttribute()]
        //public WCFClient.Proxy.Customer Customer {
        //    get {
        //        return this.CustomerField;
        //    }
        //    set {
        //        if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
        //            this.CustomerField = value;
        //            this.RaisePropertyChanged("Customer");
        //        }
        //    }
        //}
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DATA {
            get {
                return this.DATAField;
            }
            set {
                if ((this.DATAField.Equals(value) != true)) {
                    this.DATAField = value;
                    this.RaisePropertyChanged("DATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ORDERID {
            get {
                return this.ORDERIDField;
            }
            set {
                if ((this.ORDERIDField.Equals(value) != true)) {
                    this.ORDERIDField = value;
                    this.RaisePropertyChanged("ORDERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WCFClient.Proxy.OrderDetails> OrderDetails {
            get {
                return this.OrderDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderDetailsField, value) != true)) {
                    this.OrderDetailsField = value;
                    this.RaisePropertyChanged("OrderDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> VALOARE {
            get {
                return this.VALOAREField;
            }
            set {
                if ((this.VALOAREField.Equals(value) != true)) {
                    this.VALOAREField = value;
                    this.RaisePropertyChanged("VALOARE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDetails", Namespace="http://schemas.datacontract.org/2004/07/EF2")]
    [System.SerializableAttribute()]
    public partial class OrderDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ORDERIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFClient.Proxy.Order OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PRODUSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SERIALField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VALOAREField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ORDERID {
            get {
                return this.ORDERIDField;
            }
            set {
                if ((this.ORDERIDField.Equals(value) != true)) {
                    this.ORDERIDField = value;
                    this.RaisePropertyChanged("ORDERID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFClient.Proxy.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PRODUS {
            get {
                return this.PRODUSField;
            }
            set {
                if ((object.ReferenceEquals(this.PRODUSField, value) != true)) {
                    this.PRODUSField = value;
                    this.RaisePropertyChanged("PRODUS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SERIAL {
            get {
                return this.SERIALField;
            }
            set {
                if ((this.SERIALField.Equals(value) != true)) {
                    this.SERIALField = value;
                    this.RaisePropertyChanged("SERIAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VALOARE {
            get {
                return this.VALOAREField;
            }
            set {
                if ((this.VALOAREField.Equals(value) != true)) {
                    this.VALOAREField = value;
                    this.RaisePropertyChanged("VALOARE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.ICustomer")]
    public interface ICustomer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomerById", ReplyAction="http://tempuri.org/ICustomer/GetCustomerByIdResponse")]
        WCFClient.Proxy.Customer GetCustomerById(short id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetCustomerById", ReplyAction="http://tempuri.org/ICustomer/GetCustomerByIdResponse")]
        System.Threading.Tasks.Task<WCFClient.Proxy.Customer> GetCustomerByIdAsync(short id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/InsertCustomer", ReplyAction="http://tempuri.org/ICustomer/InsertCustomerResponse")]
        bool InsertCustomer(string name, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/InsertCustomer", ReplyAction="http://tempuri.org/ICustomer/InsertCustomerResponse")]
        System.Threading.Tasks.Task<bool> InsertCustomerAsync(string name, string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomer/UpdateCustomerResponse")]
        bool UpdateCustomer(WCFClient.Proxy.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/UpdateCustomer", ReplyAction="http://tempuri.org/ICustomer/UpdateCustomerResponse")]
        System.Threading.Tasks.Task<bool> UpdateCustomerAsync(WCFClient.Proxy.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomer/DeleteCustomerResponse")]
        void DeleteCustomer(WCFClient.Proxy.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/DeleteCustomer", ReplyAction="http://tempuri.org/ICustomer/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(WCFClient.Proxy.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetAllOrders", ReplyAction="http://tempuri.org/ICustomer/GetAllOrdersResponse")]
        System.Collections.Generic.List<WCFClient.Proxy.Order> GetAllOrders(short customerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomer/GetAllOrders", ReplyAction="http://tempuri.org/ICustomer/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WCFClient.Proxy.Order>> GetAllOrdersAsync(short customerID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerChannel : WCFClient.Proxy.ICustomer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerClient : System.ServiceModel.ClientBase<WCFClient.Proxy.ICustomer>, WCFClient.Proxy.ICustomer {
        
        public CustomerClient() {
        }
        
        public CustomerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFClient.Proxy.Customer GetCustomerById(short id) {
            return base.Channel.GetCustomerById(id);
        }
        
        public System.Threading.Tasks.Task<WCFClient.Proxy.Customer> GetCustomerByIdAsync(short id) {
            return base.Channel.GetCustomerByIdAsync(id);
        }
        
        public bool InsertCustomer(string name, string address) {
            return base.Channel.InsertCustomer(name, address);
        }
        
        public System.Threading.Tasks.Task<bool> InsertCustomerAsync(string name, string address) {
            return base.Channel.InsertCustomerAsync(name, address);
        }
        
        public bool UpdateCustomer(WCFClient.Proxy.Customer customer) {
            return base.Channel.UpdateCustomer(customer);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCustomerAsync(WCFClient.Proxy.Customer customer) {
            return base.Channel.UpdateCustomerAsync(customer);
        }
        
        public void DeleteCustomer(WCFClient.Proxy.Customer customer) {
            base.Channel.DeleteCustomer(customer);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(WCFClient.Proxy.Customer customer) {
            return base.Channel.DeleteCustomerAsync(customer);
        }
        
        public System.Collections.Generic.List<WCFClient.Proxy.Order> GetAllOrders(short customerID) {
            return base.Channel.GetAllOrders(customerID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WCFClient.Proxy.Order>> GetAllOrdersAsync(short customerID) {
            return base.Channel.GetAllOrdersAsync(customerID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IOrder")]
    public interface IOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/GetOrder", ReplyAction="http://tempuri.org/IOrder/GetOrderResponse")]
        WCFClient.Proxy.Order GetOrder(short orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/GetOrder", ReplyAction="http://tempuri.org/IOrder/GetOrderResponse")]
        System.Threading.Tasks.Task<WCFClient.Proxy.Order> GetOrderAsync(short orderID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/InsertOrder", ReplyAction="http://tempuri.org/IOrder/InsertOrderResponse")]
        void InsertOrder(short customerID, System.DateTime dt, decimal value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/InsertOrder", ReplyAction="http://tempuri.org/IOrder/InsertOrderResponse")]
        System.Threading.Tasks.Task InsertOrderAsync(short customerID, System.DateTime dt, decimal value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/UpdateOrder", ReplyAction="http://tempuri.org/IOrder/UpdateOrderResponse")]
        void UpdateOrder(WCFClient.Proxy.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/UpdateOrder", ReplyAction="http://tempuri.org/IOrder/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(WCFClient.Proxy.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/DeleteOrder", ReplyAction="http://tempuri.org/IOrder/DeleteOrderResponse")]
        void DeleteOrder(WCFClient.Proxy.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrder/DeleteOrder", ReplyAction="http://tempuri.org/IOrder/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(WCFClient.Proxy.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderChannel : WCFClient.Proxy.IOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderClient : System.ServiceModel.ClientBase<WCFClient.Proxy.IOrder>, WCFClient.Proxy.IOrder {
        
        public OrderClient() {
        }
        
        public OrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFClient.Proxy.Order GetOrder(short orderID) {
            return base.Channel.GetOrder(orderID);
        }
        
        public System.Threading.Tasks.Task<WCFClient.Proxy.Order> GetOrderAsync(short orderID) {
            return base.Channel.GetOrderAsync(orderID);
        }
        
        public void InsertOrder(short customerID, System.DateTime dt, decimal value) {
            base.Channel.InsertOrder(customerID, dt, value);
        }
        
        public System.Threading.Tasks.Task InsertOrderAsync(short customerID, System.DateTime dt, decimal value) {
            return base.Channel.InsertOrderAsync(customerID, dt, value);
        }
        
        public void UpdateOrder(WCFClient.Proxy.Order order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(WCFClient.Proxy.Order order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public void DeleteOrder(WCFClient.Proxy.Order order) {
            base.Channel.DeleteOrder(order);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(WCFClient.Proxy.Order order) {
            return base.Channel.DeleteOrderAsync(order);
        }
    }
}
